.ds-grid {
  width: 100%;
  
  > * {
    box-sizing: border-box;
  }

  // handles grid-level padding for children
  &.spacing {
    &-s {
      .ds-grid__row, 
      .ds-grid__col {
        padding: #grid-size.s() [@spacing-size];
      }
    }
    &-m {
      .ds-grid__row, 
      .ds-grid__col {
        padding: #grid-size.m() [@spacing-size];
      }
    }
    &-l {
      .ds-grid__row, 
      .ds-grid__col {
        padding: #grid-size.l() [@spacing-size];
      }
    }
  }

  &__row {
    display: flex;
    flex-wrap: wrap;
  }


  &__col {
    &.width-one-third,
    &.width-one-fourth {
      flex: 1;
    }
    &.width-one-half,
    &.width-two-thirds {
      flex: 2;
    }
    &.width-three-fourths {
      flex: 3;
    }
    &.width-one-third { max-width: calc(~'100% / 3'); }
    &.width-one-fourth { max-width: calc(~'100% / 4')}
  }

    // allows for global grid padding to be reset
  &.spacing-s,
  &.spacing-m,
  &.spacing-l {
    .ds-grid__row,
    .ds-grid__col {
      &.spacing {
        &-s { padding: #grid-size.s() [@spacing-size]; }
        &-m { padding: #grid-size.m() [@spacing-size]; }
        &-l { padding: #grid-size.l() [@spacing-size]; }
      }
    }
  }
}

&.align {
  &-start { #align(start); }
  &-center { #align(center); }
  &-end { #align(end); }
}

&.justify {
  &-start { #justify(start); }
  &-center { #justify(center); }
  &-end { #justify(end); }
}

#grid-size() {
  .s() {
    @spacing-size: 8px;
  }
  .m() {
    @spacing-size: 16px;
  }
  .l() {
    @spacing-size: 24px;
  }
}

#justify(@position) {
  display: flex;
  justify-content: @position;
}

#align(@position) {
  display: flex;
  align-items: @position;
}